name: Build and Testing CI

on:
  push:
    # tags:
    #   - 'v*.*.*'
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.0'
        cache: true

     # Decodificar o keystore Base64
    - name: Decode Keystore
      run: |
        echo "${{ secrets.UPLOAD_KEYSTORE }}" > upload-keystore.jks.base64
        base64 -d upload-keystore.jks.base64 > android/app/upload-keystore.jks

    # Criar key.properties
    - name: Create key.properties
      run: |
        echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=cvbuilderupload" >> android/key.properties
        echo "storeFile=upload-keystore.jks" >> android/key.properties
    
    - name: Install dependencies
      run: flutter pub get

    - name: Generate translations
      run: flutter gen-l10n

    - name: Analyze project
      run: flutter analyze

    - name: Run Tests
      run: flutter test

    # - name: Build APK
    #   run: flutter build apk --release

    - name: Build Appbundle
      if: github.ref == 'refs/heads/main'
      run: flutter build appbundle --release

    - name: Upload AAB
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: release-aab
        path: build/app/outputs/bundle/release/app-release.aab

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: release-aab

        # Upload para Play Store (exemplo)
        # Criar Projeto e Conta de Serviço no Google Cloud Console, adicionar perfil de "Editor"
        # Criar permissão e chave, baixar JSON e colar no GitHub Repository Secrets
        # Adicionar email da Conta de Serviço no Google Play Console > Usuários e Permissões > Convidar novos usuários
        # Ativar a Google Play Android Developer API
      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.carvalhodev.cvbuilder.cv_builder
          releaseFiles: app-release.aab
          track: internal
          status: draft
          